#!/usr/bin/env node
const fs = require('fs');
const path = require('path');
const __merge = require('lodash/merge');

// extend config
const defaultConfig = require(__dirname + '/tests.config.js');
let config = {};
if (fs.existsSync(process.env.PWD + '/tests.config.js')) {
	config = require(process.env.PWD + '/tests.config.js');
}

// configs
const finalConfig = __merge({}, defaultConfig, config ||Â {}, {
	karma: {
		webpack: {
			module: {
				loaders: [{
					test: /\.js$/,
					exclude: /node_modules/,
					loader: 'babel-loader'
				}, {
					test: /\.html$/,
					loader: 'html-loader'
				}],
				rules: [{
					test: /\.js$/,
					exclude: /node_modules/,
					loader: 'babel-loader'
				}, {
					test: /\.html$/,
					loader: 'html-loader'
				}]
			},
			node: {
				fs: "empty"
			}
		},
		webpackMiddleware: {
			stats: 'minimal',
			noInfo: true
		}
	}
});

// karma
if (finalConfig.karma.files.length) {
	// start and run server
	const Server = require('karma').Server
	const server = new Server(finalConfig.karma, function(exitCode) {
		console.log('All done folks! exit(' + exitCode + ')');
		process.exit(exitCode);
	});
	server.start();
}
